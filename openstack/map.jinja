{# Settings map file: 'openstack/map.jinja' #}
{# To use, add: #}
{# {% from "openstack/map.jinja" import openstack_settings with context %} #}
{% set os_map = salt['grains.filter_by']({
  'default': {
    'ntp': {
      'config_file': '/etc/chrony.conf',
      'master_hostname': 'controller',
      'servers': [
        '0.centos.pool.ntp.org',
        '1.centos.pool.ntp.org',
        '2.centos.pool.ntp.org',
        '3.centos.pool.ntp.org'
      ],
    },
    'dependencies': {
      'keystone': [
        'openstack-keystone',
        'memcached'
      ],
      'glance': [
        'openstack-glance',
        'python-glance',
        'python-glanceclient'
      ],
      'nova_controller': [
        'openstack-nova-api',
        'openstack-nova-cert',
        'openstack-nova-conductor',
        'openstack-nova-console',
        'openstack-nova-novncproxy',
        'openstack-nova-scheduler',
        'python-novaclient'
      ],
      'nova_compute': [
        'openstack-nova-compute',
        'sysfsutils',
        'libguestfs-tools'
      ],
      'neutron_controller': [
        'openstack-neutron',
        'openstack-neutron-ml2',
        'openstack-neutron-linuxbridge',
        'python-neutronclient',
        'ebtables',
        'ipset'
      ],
      'neutron_compute': [
        'openstack-neutron',
        'openstack-neutron-linuxbridge',
        'ebtables',
        'ipset'
      ],
      'horizon': [
        'openstack-dashboard'
      ],
      'cinder_controller': [
        'openstack-cinder',
        'python-cinderclient'
      ],
      'cinder_storage': [
        'lvm2',
        'openstack-cinder',
        'targetcli',
        'python-oslo-policy'
      ]
    },
    'services': {
      'glance': [
        'openstack-glance-api',
        'openstack-glance-registry'
      ],
      'nova_controller': [
        'openstack-nova-api',
        'openstack-nova-cert',
        'openstack-nova-consoleauth',
        'openstack-nova-scheduler',
        'openstack-nova-conductor',
        'openstack-nova-novncproxy'
      ],
      'nova_compute': [
        'libvirtd',
        'openstack-nova-compute'
      ],
      'neutron_controller': [
        'neutron-server',
        'neutron-linuxbridge-agent',
        'neutron-dhcp-agent',
        'neutron-metadata-agent'
      ],
      'neutron_compute': [
        'neutron-linuxbridge-agent'
      ],
      'cinder_controller': [
        'openstack-cinder-api',
        'openstack-cinder-scheduler'
      ],
      'cinder_storage': [
        'lvm2-lvmetad',
        'openstack-cinder-volume',
        'target'
      ]
    },
    'config': {
      'keystone': {
        'keystone': {
          'path': 'keystone',
          'files': {
            'keystone.conf': 'keystone'
          }
        }
      },
      'glance': {
        'glance': {
          'path': 'glance',
          'files': {
            'glance-api.conf': 'glance_api',
            'glance-registry.conf': 'glance_registry'
          }
        }
      },
      'nova': {
        'nova': {
          'path': 'nova',
          'files': {
            'nova.conf': 'nova'
          }
        }
      },
      'neutron': {
        'neutron': {
          'path': 'neutron',
          'files': {
            'neutron.conf': 'neutron',
            'dhcp_agent.ini': 'dhcp_agent',
            'metadata_agent.ini': 'metadata_agent'
          }
        },
        'ml2': {
          'path': 'neutron/plugins/ml2',
          'files': {
            'ml2_conf.ini': 'ml2_conf',
            'linuxbridge_agent.ini': 'linuxbridge_agent'
          }
        }
      },
      'cinder': {
        'cinder': {
          'path': 'cinder',
          'files': {
            'cinder.conf': 'cinder'
          }
        }
      }
    },
    'db_table_test': {
      'keystone': 'project',
      'glance': 'images',
      'nova_controller': 'instances',
      'neutron_controller': 'networks',
      'cinder_controller': 'volumes'
    },
    
    'config_base': '/etc',
    
    'time_zone': 'Europe/London',
    
    'default_domain': 'default',
    'default_region': 'RegionOne',
    'default_role': 'user',
    
    'vnc_port': '6080',
    
    'rpc_backend': 'rabbit',
    'rabbit_user_id': 'openstack',
    
    'memcache_port': '11211',
    
    'keystone_public_port': '5000',
    'keystone_admin_port': '35357',
    'keystone_api_version': '3',
    
    'glance_port': '9292',
    
    'nova_port': '8774',
    'nova_api_version': '2',    
    'nova_apis': [
      'osapi_compute',
      'metadata'
    ],
    
    'neutron_port': '9696',
    
    'cinder_port': '8776',
    'cinder_volumes_dir': '/var/lib/cinder/volumes'
  },
  'Debian': {
  },
  'RedHat': {
  },
}, grain='os_family', merge=salt['pillar.get']('openstack:lookup'), base='default') %}


{% import_yaml "openstack/defaults.yaml" as default_passwords %}
{% set passwords = salt['pillar.get']('openstack:passwords', default = default_passwords, merge = True) %}

{% set hosts = salt['pillar.get'](
  'openstack:hosts', 
  default =
  {
      'controller': 'controller',
      'database': 'controller',
      'keystone': 'controller',
      'rabbit': 'controller',
      'glance': 'controller',
      'metadata': 'controller'
   }, 
  merge = True) 
%}

{% set nodes = salt['pillar.get']('openstack:nodes') %}

{% set default_settings = {
  'openstack': {
    'openstack_release': 'liberty',

    'passwords': {},

    'nodes': {},
    
    'hosts': {},
    
    'user': {
      'admin': {
        'password': passwords.get('ADMIN_PASS'),
        'domain': os_map.get('default_domain'),
        'endpoint': 'admin'
      },
      'glance': {
        'password': passwords.get('GLANCE_PASS'),
        'domain': os_map.get('default_domain'),
        'endpoint': 'admin'
      },
      'nova': {
        'password': passwords.get('NOVA_PASS'),
        'domain': os_map.get('default_domain'),
        'endpoint': 'admin'
      },
      'neutron': {
        'password': passwords.get('NEUTRON_PASS'),
        'domain': os_map.get('default_domain'),
        'endpoint': 'admin'
      },
      'cinder': {
        'password': passwords.get('CINDER_PASS'),
        'domain': os_map.get('default_domain'),
        'endpoint': 'admin'
      }
    },
    
    'service': {
      'keystone': {
        'description': 'Openstack Identity',
        'type': 'identity',
        'endpoint': {
          'public': {
            'region': os_map.get('default_region'),
            'url': 'http://' + hosts.get('keystone') + ':' + os_map.get('keystone_public_port') + '/v' + os_map.get('keystone_api_version')
          },
          'internal': {
            'region': os_map.get('default_region'),
            'url': 'http://' + hosts.get('keystone') + ':' + os_map.get('keystone_public_port') + '/v' + os_map.get('keystone_api_version')
          },
          'admin': {
            'region': os_map.get('default_region'),
            'url': 'http://' + hosts.get('keystone') + ':' + os_map.get('keystone_admin_port') + '/v' + os_map.get('keystone_api_version')
          }
        }
      },
      'glance': {
        'description': 'OpenStack Image service',
        'type': 'image',
        'endpoint': {
          'public': {
            'region': os_map.get('default_region'),
            'url': 'http://' + hosts.get('keystone') + ':' + os_map.get('glance_port')
          },
          'internal': {
            'region': os_map.get('default_region'),
            'url': 'http://' + hosts.get('keystone') + ':' + os_map.get('glance_port')
          },
          'admin': {
            'region': os_map.get('default_region'),
            'url': 'http://' + hosts.get('keystone') + ':' + os_map.get('glance_port')
          }
        }
      },
      'nova': {
        'description': 'OpenStack Compute service',
        'type': 'compute',
        'endpoint': {
          'public': {
            'region': os_map.get('default_region'),
            'url': 'http://' + hosts.get('keystone') + ':' + os_map.get('nova_port') + '/v' + os_map.get('nova_api_version') + "/%\\(tenant_id\\)s"
          },
          'internal': {
            'region': os_map.get('default_region'),
            'url': 'http://' + hosts.get('keystone') + ':' + os_map.get('nova_port') + '/v' + os_map.get('nova_api_version') + "/%\\(tenant_id\\)s"
          },
          'admin': {
            'region': os_map.get('default_region'),
            'url': 'http://' + hosts.get('keystone') + ':' + os_map.get('nova_port') + '/v' + os_map.get('nova_api_version') + "/%\\(tenant_id\\)s"
          }
        }
      },
      'neutron': {
        'description': 'OpenStack Networking service',
        'type': 'network',
        'endpoint': {
          'public': {
            'region': os_map.get('default_region'),
            'url': 'http://' + hosts.get('keystone') + ':' + os_map.get('neutron_port')
          },
          'internal': {
            'region': os_map.get('default_region'),
            'url': 'http://' + hosts.get('keystone') + ':' + os_map.get('neutron_port')
          },
          'admin': {
            'region': os_map.get('default_region'),
            'url': 'http://' + hosts.get('keystone') + ':' + os_map.get('neutron_port')
          }
        }
      },
      'cinder': {
        'description': 'OpenStack Block storage service',
        'type': 'volume',
        'endpoint': {
          'public': {
            'region': os_map.get('default_region'),
            'url': 'http://' + hosts.get('keystone') + ':' + os_map.get('cinder_port') + "/v1/%\\(tenant_id\\)s"
          },
          'internal': {
            'region': os_map.get('default_region'),
            'url': 'http://' + hosts.get('keystone') + ':' + os_map.get('cinder_port') + "/v1/%\\(tenant_id\\)s"
          },
          'admin': {
            'region': os_map.get('default_region'),
            'url': 'http://' + hosts.get('keystone') + ':' + os_map.get('cinder_port') + "/v1/%\\(tenant_id\\)s"
          }
        }
      },
      'cinderv2': {
        'description': 'OpenStack Block storage service',
        'type': 'volumev2',
        'endpoint': {
          'public': {
            'region': os_map.get('default_region'),
            'url': 'http://' + hosts.get('keystone') + ':' + os_map.get('cinder_port') + "/v2/%\\(tenant_id\\)s"
          },
          'internal': {
            'region': os_map.get('default_region'),
            'url': 'http://' + hosts.get('keystone') + ':' + os_map.get('cinder_port') + "/v2/%\\(tenant_id\\)s"
          },
          'admin': {
            'region': os_map.get('default_region'),
            'url': 'http://' + hosts.get('keystone') + ':' + os_map.get('cinder_port') + "/v2/%\\(tenant_id\\)s"
          }
        }
      }
    },
    
    'role': [
      'admin',
      'user'
    ],
    
    'project': {
      'admin': {
        'domain': os_map.get('default_domain'),
        'description': 'Admin project',
        'user': {
          'admin': {
            'domain': os_map.get('default_domain'),
            'description': 'Admin user',
            'role': 'admin'
          }
        }
      },
      'service': {
        'domain': os_map.get('default_domain'),
        'description': 'Service project',
        'user': {
          'glance': {
            'domain': os_map.get('default_domain'),
            'description': 'Glance user',
            'role': 'admin'
          },
          'nova': {
            'domain': os_map.get('default_domain'),
            'description': 'Nova user',
            'role': 'admin'
          },
          'neutron': {
            'domain': os_map.get('default_domain'),
            'description': 'Neutron user',
            'role': 'admin'
          },
          'cinder': {
            'domain': os_map.get('default_domain'),
            'description': 'Cinder user',
            'role': 'admin'
          }
        }
      }
    },
    
    'verbose_log': {
      'keystone': 'True',
      'glance': 'True',
      'nova': 'True',
      'neutron': 'True'
    },
    'debug_log': {
      'keystone': 'True',
      'glance': 'True',
      'nova': 'True',
      'neutron': 'True'
    },
        
    'keystone': {
      'DEFAULT': {
        'admin_token': passwords.get('KEYSTONE_ADMIN_TOKEN')
      },
      'database': {
        'connection': 'mysql://keystone:' + passwords.get('KEYSTONE_DBPASS') + '@' + hosts.get('database') + '/keystone'
      },
      'memcache': {
        'servers': hosts.get('keystone') + ':' + os_map.get('memcache_port')
      },
      'revoke': {
        'driver': 'sql'
      },
      'token': {
        'provider': 'uuid',
        'driver': 'memcache',
      }
    },
    
    'glance_api': {
      'DEFAULT': {
        'notification_driver': 'noop'
      },
      'database': {
        'connection': 'mysql://glance:' + passwords.get('GLANCE_DBPASS') + '@' + hosts.get('database') + '/glance'
      },
      'glance_store': {
        'default_store': 'file',
        'filesystem_store_datadir': '/var/lib/glance/images/',
      },
      'keystone_authtoken': {
        'auth_uri': 'http://' + hosts.get('keystone') + ':' + os_map.get('keystone_public_port'),
        'auth_url': 'http://' + hosts.get('keystone') + ':' + os_map.get('keystone_admin_port'),
        'auth_plugin': 'password',
        'project_domain_id': os_map.get('default_domain'),
        'user_domain_id': os_map.get('default_domain'),
        'project_name': 'service',
        'username': 'glance',
        'password': passwords.get('GLANCE_PASS')
        },
        'paste_deploy': {
          'flavor': 'keystone'
        }
    },
    'glance_registry': {
      'DEFAULT': {
        'notification_driver': 'noop'
      },
      'database': {
        'connection': 'mysql://glance:' + passwords.get('GLANCE_DBPASS') + '@' + hosts.get('database') + '/glance'
      },
      'keystone_authtoken': {
        'auth_uri': 'http://' + hosts.get('keystone') + ':' + os_map.get('keystone_public_port'),
        'auth_url': 'http://' + hosts.get('keystone') + ':' + os_map.get('keystone_admin_port'),
        'auth_plugin': 'password',
        'project_domain_id': os_map.get('default_domain'),
        'user_domain_id': os_map.get('default_domain'),
        'project_name': 'service',
        'username': 'glance',
        'password': passwords.get('GLANCE_PASS')
      }
    },
    
    'nova': {
      'DEFAULT': {
        'auth_strategy': 'keystone',
        'enabled_apis': ','.join(os_map.get('nova_apis')),
        'my_ip': salt['grains.get']('ipv4')[0],
        'novncproxy_base_url': 'http://'+ hosts.get('controller') + ':' + os_map.get('vnc_port') + '/vnc_auto.html',
        'vncserver_listen': '$my_ip',
        'vncserver_proxyclient_address': '$my_ip',
        'network_api_class': 'nova.network.neutronv2.api.API',
        'linuxnet_interface_driver': 'nova.network.linux_net.NeutronLinuxBridgeInterfaceDriver',
        'security_group_api': 'neutron',
        'compute_driver': 'libvirt.LibvirtDriver',
        'firewall_driver': 'nova.virt.firewall.NoopFirewallDriver',
        'rpc_backend': os_map.get('rpc_backend')      
      },
      'database': {
        'connection': 'mysql://nova:' + passwords.get('NOVA_DBPASS') + '@' + hosts.get('database') + '/nova'
      },
      'libvirt': {
        'virt_type': 'qemu'
      },
      'keystone_authtoken': {
        'auth_uri': 'http://' + hosts.get('keystone') + ':' + os_map.get('keystone_public_port'),
        'auth_url': 'http://' + hosts.get('keystone') + ':' + os_map.get('keystone_admin_port'),
        'auth_plugin': 'password',
        'project_domain_id': os_map.get('default_domain'),
        'user_domain_id': os_map.get('default_domain'),
        'project_name': 'service',
        'username': 'nova',
        'password': passwords.get('NOVA_PASS')
      },
      'oslo_messaging_rabbit': {
        'rabbit_host': hosts.get('rabbit'),
        'rabbit_userid': os_map.get('rabbit_user_id'),
        'rabbit_password': passwords.get('RABBIT_PASS')
      },
      'glance': {
        'home': hosts.get('glance')
      },
      'neutron': {
        'auth_uri': 'http://' + hosts.get('keystone') + ':' + os_map.get('keystone_public_port'),
        'auth_url': 'http://' + hosts.get('keystone') + ':' + os_map.get('keystone_admin_port'),
        'auth_plugin': 'password',
        'project_domain_id': os_map.get('default_domain'),
        'user_domain_id': os_map.get('default_domain'),
        'project_name': 'service',
        'region_name': os_map.get('default_region'),
        'username': 'neutron',
        'password': passwords.get('NEUTRON_PASS'),
        
        'service_metadata_proxy': 'True',
        'metadata_proxy_shared_secret': passwords.get('METADATA_SECRET')
      },
      'cinder': {
        'os_region_name': os_map.get('default_region')
      }
    },
    
    'neutron': {
      'DEFAULT': {
        'auth_strategy': 'keystone',
        'core_plugin': 'ml2',
        'service_plugins': '',
        'rpc_backend': os_map.get('rpc_backend'),
        'notify_nova_on_port_status_changes': 'True',
        'notify_nova_on_port_data_changes': 'True',
        'nova_url': 'http://controller:8774/v2'
      },
      'database': {
        'connection': 'mysql://neutron:' + passwords.get('NEUTRON_DBPASS') + '@' + hosts.get('database') + '/neutron'
      },
      'oslo_messaging_rabbit': {
        'rabbit_host': hosts.get('rabbit'),
        'rabbit_userid': os_map.get('rabbit_user_id'),
        'rabbit_password': passwords.get('RABBIT_PASS')
      },
      'keystone_authtoken': {
        'auth_uri': 'http://' + hosts.get('keystone') + ':' + os_map.get('keystone_public_port'),
        'auth_url': 'http://' + hosts.get('keystone') + ':' + os_map.get('keystone_admin_port'),
        'auth_plugin': 'password',
        'project_domain_id': os_map.get('default_domain'),
        'user_domain_id': os_map.get('default_domain'),
        'project_name': 'service',
        'username': 'neutron',
        'password': passwords.get('NEUTRON_PASS')
      },
      'nova': {
        'auth_uri': 'http://' + hosts.get('keystone') + ':' + os_map.get('keystone_public_port'),
        'auth_url': 'http://' + hosts.get('keystone') + ':' + os_map.get('keystone_admin_port'),
        'auth_plugin': 'password',
        'project_domain_id': os_map.get('default_domain'),
        'user_domain_id': os_map.get('default_domain'),
        'project_name': 'service',
        'region_name': os_map.get('default_region'),
        'username': 'nova',
        'password': passwords.get('NOVA_PASS')
      },
      'oslo_concurrency': {
        'lock_path': '/var/lib/neutron/tmp'
      }
    },
    'ml2_conf': {
      'ml2': {
        'type_drivers': 'flat,vlan',
        'tenant_network_types': '',
        'mechanism_drivers': 'linuxbridge',
        'extension_drivers': 'port_security'
      },
      'ml2_type_flat': {
        'flat_networks': 'public'
      },
      'securitygroup': {
        'enable_ipset': 'True'
      }
    },
    'linuxbridge_agent': {
      'vxlan': {
        'enable_vxlan': 'False'
      },
      'agent': {
        'prevent_arp_spoofing': 'True'
      },
      'securitygroup': {
        'enable_security_group': 'True',
        'firewall_driver': 'neutron.agent.linux.iptables_firewall.IptablesFirewallDriver'
      }
    },
    'dhcp_agent': {
      'DEFAULT': {
        'interface_driver': 'neutron.agent.linux.interface.BridgeInterfaceDriver',
        'dhcp_driver': 'neutron.agent.linux.dhcp.Dnsmasq',
        'enable_isolated_metadata': 'True'
      }
    },
    'metadata_agent': {
      'DEFAULT': {
        'auth_uri': 'http://' + hosts.get('keystone') + ':' + os_map.get('keystone_public_port'),
        'auth_url': 'http://' + hosts.get('keystone') + ':' + os_map.get('keystone_admin_port'),
        'auth_plugin': 'password',
        'project_domain_id': os_map.get('default_domain'),
        'user_domain_id': os_map.get('default_domain'),
        'project_name': 'service',
        'region_name': os_map.get('default_region'),
        'username': 'neutron',
        'password': passwords.get('NEUTRON_PASS'),
        
        'nova_metadata_ip': hosts.get('metadata'),
        'metadata_proxy_shared_secret': passwords.get('METADATA_SECRET')
      }
    },
    
    'horizon': {
      'allowed_hosts': [
        '*'
      ],
      'cache_backend': 'django.core.cache.backends.memcached.MemcachedCache',
      
      'enable_router': True,
      'enable_quotas': True,
      'enable_ipv6': True,
      'enable_distributed_router': False,
      'enable_ha_router': False,
      'enable_lb': True,
      'enable_firewall': True,
      'enable_vpn': True,
      'enable_fip_topology_check': True
    },
    
    'cinder': {
      'DEFAULT': {
        'my_ip': salt['grains.get']('ipv4')[0],
        'auth_strategy': 'keystone',
        'rpc_backend': os_map.get('rpc_backend'),
        'glance_host': hosts.get('glance')
      },
      'database': {
        'connection': 'mysql://cinder:' + passwords.get('CINDER_DBPASS') + '@' + hosts.get('database') + '/cinder'
      },
      'oslo_messaging_rabbit': {
        'rabbit_host': hosts.get('rabbit'),
        'rabbit_userid': os_map.get('rabbit_user_id'),
        'rabbit_password': passwords.get('RABBIT_PASS')
      },
      'keystone_authtoken': {
        'auth_uri': 'http://' + hosts.get('keystone') + ':' + os_map.get('keystone_public_port'),
        'auth_url': 'http://' + hosts.get('keystone') + ':' + os_map.get('keystone_admin_port'),
        'auth_plugin': 'password',
        'project_domain_id': os_map.get('default_domain'),
        'user_domain_id': os_map.get('default_domain'),
        'project_name': 'service',
        'username': 'cinder',
        'password': passwords.get('CINDER_PASS')
      },
      'oslo_concurrency': {
        'lock_path': '/var/lib/cinder/tmp'
      }
    }
  },
}%}

{% do default_settings.openstack.passwords.update(passwords) %}
{% do default_settings.openstack.hosts.update(hosts) %}

{# Merge os_map into default_settings dictionary #}
{% do default_settings.openstack.update(os_map) %}

{# Update settings defaults from pillar data #}
{% set openstack_settings = salt['pillar.get']('openstack', default=default_settings.openstack, merge=True) %}
